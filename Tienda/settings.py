"""
Django settings for Tienda project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path
import cloudinary
import cloudinary.uploader
import cloudinary.api

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z1lpmr!%6!zmsnkktle4z^#rv2o68=@fl-+zkhcjb01=&^tj*='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['.vercel.app','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'admin_confirm',
    'multi_captcha_admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',

    #My apps
    'core',
    'crispy_forms',
    "crispy_bootstrap4",
    'axes',
    'captcha',
    'django_recaptcha',
    'cloudinary',
]

CRISPY_TEMPLATE_PACK = "bootstrap4"

MULTI_CAPTCHA_ADMIN = {
    'engine' : 'simple-captcha'
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #AXES
    'axes.middleware.AxesMiddleware',
]

ROOT_URLCONF = 'Tienda.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Tienda.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

"""DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': 'aws-0-us-east-1.pooler.supabase.com',
        'NAME': 'postgres',
        'USER': 'postgres.byfqmcwmmdxsdwfteyua',
        'PASSWORD': '#123asdsa#asd',
        'PORT': '6543'
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'es-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#python manage.py collectstatic --upload-unhashed-files


#CONFIG CLOUDINARY
cloudinary.config (
    cloud_name = 'dgszfohcu',
    api_key = '526215546292375',
    api_secret = 'gXulzBFSxvezH2oGkgQg6ziq3sk'
)



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Configuracion del login y logout
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
#Configuracion de mensajes

#Configuracion para las imagenes

MEDIA_URL = 'contenedor/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


#RECAPTCHA
RECAPTCHA_PUBLIC_KEY = '6LcVzPkpAAAAAA8vzgW8J5aeIZowJR6cLjYJK418'
RECAPTCHA_PRIVATE_KEY = '6LcVzPkpAAAAAI3PhkkdEtVM7ITyz8bMx2JFo5ls'

#CONFIG AXES
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',
    'django.contrib.auth.backends.ModelBackend',
]

AXES_FAILURE_LIMIT = 3 #son los numeros de intentos fallidos
AXES_COOLOFF_TIME = timedelta(minutes=1) # cantidad de tiempo que tiene antes de otro login
AXES_LOCKOUT_URL = '/account_locked/'
AXES_RESET_ON_SUCCESS = True #RESETEA EL CONTADOR DE LOS FALLOS CUANDO HAY LOGIN EXITOSO



# Config demo mail
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "p04117311@gmail.com"
EMAIL_HOST_PASSWORD = 'sczp cmcp eepd xjuh'  # La contraseña de aplicación generada